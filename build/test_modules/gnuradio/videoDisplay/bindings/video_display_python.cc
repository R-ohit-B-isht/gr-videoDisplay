/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(video_display.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(a17d0abe218df5d8d91f3270486815d7)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/videoDisplay/video_display.h>
// pydoc.h is automatically generated in the build directory
#include <video_display_pydoc.h>

void bind_video_display(py::module& m)
{

    using video_display = gr::videoDisplay::video_display;


    py::class_<video_display, gr::block, gr::basic_block, std::shared_ptr<video_display>>(
        m, "video_display", D(video_display))

        .def(py::init(&video_display::make),
             py::arg("itemsize"),
             py::arg("filename"),
             py::arg("parent") = nullptr,
             D(video_display, make))

        .def("exec_", &video_display::exec_, D(video_display, exec_))


        .def(
            "qwidget",
            [](video_display& self) {
                return reinterpret_cast<uintptr_t>(self.qwidget());
            },
            D(video_display, qwidget));
}
